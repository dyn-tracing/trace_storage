# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:public"])
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

licenses(["notice"])  # Apache 2.0

cc_library(
    name = "common",
    srcs = [
        "common.cc",
        "common.h",
    ],
    hdrs = ["common.h"],
    deps = [
        "@com_github_googleapis_google_cloud_cpp//:storage",
        "@boost//:algorithm",
        "@boost//:graph",
        "@boost//:date_time",
        "@boost//:regex",
        "@com_google_protobuf//:protobuf",
        "@com_github_opentelemetry_proto//:trace_service_proto_cc",
    ],
    visibility = ["//main:__pkg__"],
)

cc_library(
    name = "conditions_lib",
    srcs = [
        "query_conditions.cc",
        "query_conditions.h",
    ],
    hdrs = ["query_conditions.h"],
    deps = [
        "@com_github_googleapis_google_cloud_cpp//:storage",
        "@com_github_opentelemetry_proto//:trace_service_proto_cc",
        "//:common",
    ]
)

cc_library(
    name = "graph_query_lib",
    srcs = [
        "graph_query.cc",
        "graph_query.h",
    ],
    hdrs = ["graph_query.h"],
    deps = [
        "@com_github_googleapis_google_cloud_cpp//:storage",
        "@boost//:algorithm",
        "@boost//:graph",
        "@boost//:date_time",
        "@com_google_protobuf//:protobuf",
        "@com_github_opentelemetry_proto//:trace_service_proto_cc",
        "//:get_traces_by_structure",
        "//:common",
        "//:folders_index_query_lib",
        "//:query_bloom_index",
        "//:conditions_lib"
    ],
    visibility = ["//main:__pkg__"],
)

cc_library(
    name = "get_traces_by_structure",
    srcs = [
        "get_traces_by_structure.cc",
        "get_traces_by_structure.h",
    ],
    hdrs = ["get_traces_by_structure.h"],
    deps = [
        "@com_github_googleapis_google_cloud_cpp//:storage",
        "@boost//:algorithm",
        "@boost//:graph",
        "@boost//:date_time",
        "@com_google_protobuf//:protobuf",
        "@com_github_opentelemetry_proto//:trace_service_proto_cc",
        "//:common",
    ],
    visibility = ["//main:__pkg__"],
)

cc_binary(
    name = "graph_query",
    srcs = [
        "graph_query_main.cc",
    ],
    deps = [
        "//:bloom_filter",
        "//:graph_query_lib",
        "//:query_bloom_index",
        "//:folders_index_query_lib",
        "@com_github_googleapis_google_cloud_cpp//:storage",
        "@boost//:algorithm",
        "@boost//:graph",
        "@com_google_protobuf//:protobuf",
        "@com_github_opentelemetry_proto//:trace_service_proto_cc",
        "//:common",
    ],
)

cc_library(
    name = "count_lib",
    srcs = [
        "count_traces/count.cc",
    ],
    hdrs = ["count_traces/count.h"],
    deps = [
        "//:common",
        "@com_github_googleapis_google_cloud_cpp//:storage",
    ]
)

cc_binary(
    name = "count",
    srcs = [
        "count_traces/main.cc",
    ],
    deps = [
        "//:count_lib",
        "@com_github_googleapis_google_cloud_cpp//:storage",
    ],
)

cc_binary(
    name = "simple_graph_query",
    srcs = [
        "graph_query_main.cc",
    ],
    deps = [
        "//:query_bloom_index",
        "//:graph_query_lib",
        "//:get_traces_by_structure",
        "//:folders_index_query_lib",
        "//:common",
    ],
)

# Below targets are all index-related.
cc_library(
    name = "bloom_filter",
    srcs = [
        "indices/make_sequence_bloom_tree/bloom_filter.hpp"
    ],
    hdrs = ["indices/make_sequence_bloom_tree/bloom_filter.hpp"]
)


cc_library(
    name = "sequence_bloom_tree_lib",
    srcs = [
        "indices/make_sequence_bloom_tree/id_index.cc",
    ],
    hdrs = ["indices/make_sequence_bloom_tree/id_index.h"],
    deps = [
        "//:bloom_filter",
        "//:common",
        "//:conditions_lib",
        "@com_github_googleapis_google_cloud_cpp//:storage",
        "@boost//:regex",
        "@boost//:algorithm",
        "@com_google_protobuf//:protobuf",
        "@com_github_opentelemetry_proto//:trace_service_proto_cc",
    ],
    visibility = ["//main:__pkg__"],
)


cc_binary(
    name = "make_sequence_bloom_tree",
    srcs = [
        "indices/make_sequence_bloom_tree/main.cc",
    ],
    deps = [
        "//:sequence_bloom_tree_lib",
        "//:graph_query_lib",
        "//:folders_index_lib",
        "@com_github_googleapis_google_cloud_cpp//:storage",
        "@boost//:regex",
        "@boost//:algorithm",
        "@com_google_protobuf//:protobuf",
        "@com_github_opentelemetry_proto//:trace_service_proto_cc",
    ],
)


cc_test(
    name = "make_bloom_index_test",
    size = "small",
    srcs = [
            "indices/make_sequence_bloom_tree/id_index_test.cc",
         ],
    deps = [
        "//:sequence_bloom_tree_lib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "query_bloom_index_test",
    size = "small",
    srcs = [
            "indices/query_bloom_index_test.cc",
         ],
    deps = [
        "//:query_bloom_index",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "folders_index_lib",
    srcs = [
        "indices/make_folders_index/folders_index.cc",
        "indices/make_folders_index/trace_attributes.cc",
    ],
    hdrs = [
        "indices/make_folders_index/folders_index.h",
        "indices/make_folders_index/trace_attributes.h"
    ],
    deps = [
        "@com_github_googleapis_google_cloud_cpp//:storage",
        "@boost//:algorithm",
        "@boost//:graph",
        "@boost//:date_time",
        "@com_google_protobuf//:protobuf",
        "@com_github_opentelemetry_proto//:trace_service_proto_cc",
        "//:common"
    ],
    visibility = ["//main:__pkg__"],
)

cc_binary(
    name = "folders_index",
    srcs = [
        "indices/make_folders_index/main.cc"
    ],
    deps = [
        "//:folders_index_lib",
        "//:graph_query_lib",
    ],
)

cc_library(
    name = "folders_index_query_lib",
    srcs = [
        "indices/folders_index_query.cc",
        "indices/folders_index_query.h",
    ],
    hdrs = [
        "indices/folders_index_query.h"
    ],
    deps = [
        "//:folders_index_lib",
        "//:common",
    ],
)

cc_binary(
    name = "folders_index_query",
    srcs = [
        "indices/folders_index_query_main.cc",
    ],
    deps = [
        "//:folders_index_query_lib",
        "//:common",
    ],
)

cc_library(
    name = "query_bloom_index",
    srcs = [
        "indices/query_bloom_index.cc",
        "indices/query_bloom_index.h",
    ],
    hdrs = ["indices/query_bloom_index.h"],
    deps = [
        "//:sequence_bloom_tree_lib",
        "//:common",
        "@com_github_googleapis_google_cloud_cpp//:storage",
        "@boost//:regex",
        "@boost//:algorithm",
        "@com_google_protobuf//:protobuf",
        "@com_github_opentelemetry_proto//:trace_service_proto_cc",
    ],
    visibility = ["//main:__pkg__"],
)
